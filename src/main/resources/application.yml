server:
  port: ${SERVER_PORT}

jwt:
  #ssecret property 로 관리 필요
  header: Authorization
  secret: Y2hvcHBhLWRvbnQtYml0ZS1tZS1zcHJpbmctYm9vdC1qd3QtdGVzdC1zZWNyZXQta2V5LWNob3BwYS1kb250LWJpdGUtbWUtc3ByaW5nLWJvb3Qtand0LXRlc3Qtc2VjcmV0LWtleQo=
  token-validity-in-seconds: 86400

#spring:
aes:
  encrypt:
    key: ${ENCRYPT_KEY}


spring:
  modulith:
    events:
      jdbc-schema-initialization:
        enabled: true
    #  datasource:
    #    url: jdbc:h2:mem:test # h2 support in-memory-db
    #    username: sa
    #    password:
    #    driver-class-name: org.h2.Driver
  datasource:
    url: ${RDS_URL}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}

  #JPA
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        highlight_sql: true
    defer-datasource-initialization: true

# RabbitMQ 연결 정보
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# redis
  data:
    redis:
      host: localhost
      port: 6379

# RabbitMQ queue, exchange, routing-key 정보
rabbitmq:
  queue:
    name: missionary
  exchange:
    name: missionary.exchange
  routing:
    key: missionary.key
